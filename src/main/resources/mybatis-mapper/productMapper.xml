<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.kro.namohagae.mall.dao.ProductDao">
    <!--상품 정보 저장-->
    <insert id="save">
        <selectKey keyProperty="productNo" order="BEFORE" resultType="int">
            select product_seq_product_no.nextval from dual
        </selectKey>
        insert into PRODUCT(product_no,product_category_no,product_name,product_price,product_stock,product_grade,product_content,product_write_date)
        values(#{productNo},#{productCategoryNo},#{productName},#{productPrice},#{productStock},#{productGrade},#{productContent},#{productWriteDate})
    </insert>

    <update id="update" parameterType="Product">
        update PRODUCT SET
        <trim suffixOverrides=",">
        <if test="productName!=null">
            product_name = #{productName},
        </if>
        <if test="productPrice!=null">
            product_price = #{productPrice},
        </if>
        <if test="productStock!=null">
            product_stock = #{productStock},
        </if>
        <if test="productContent!=null">
            product_content = #{productContent},
        </if>
        </trim>
        where PRODUCT_NO = #{productNo}
    </update>

    <!--특정 카테고리의 상품 개수를 조회-->
    <select id="count" resultType="java.lang.Integer" parameterType="java.lang.Integer">
        select count(*) from PRODUCT
        <if test="categoryNo!=null"> where product_category_no = #{categoryNo} </if>
    </select>

    <!-- 상품명 검색시 상품 개수를 조회 -->
    <select id="countByProductName" resultType="java.lang.Integer">
        select count(*) from PRODUCT
        <if test="categoryNo!=null"> where product_category_no = #{categoryNo} and product_name like '%' || #{productName} || '%' </if>
    </select>

    <!-- 상품 목록 조회 -->
    <resultMap id="readAllMap" type="kr.kro.namohagae.mall.dto.ProductDto$ReadAll">
        <id column="product_no" property="productNo" />
        <result column="product_name" property="productName" />
        <result column="product_price" property="productPrice" />
        <result column="product_stock" property="productStock" />
        <result column="product_grade" property="productGrade" />
        <result column="review_count" property="reviewCount" />
        <result column="product_image" property="productImage" />
        <result column="favorite_enabled" property="favoriteEnabled" />
    </resultMap>

    <select id="findAll" resultMap="readAllMap">
        select * from
        (
        select rownum as rnum, p.* from
        (
        select p.product_no, p.product_name, p.product_price, p.product_stock,
        (SELECT ROUND(SUM(pr.PRODUCT_REVIEW_STAR) / COUNT(pr.product_order_detail_no), 1)
        FROM PRODUCT_REVIEW pr
        WHERE p.product_no = pr.product_no) AS PRODUCT_GRADE,
        (SELECT COUNT(pr.product_order_detail_no)
        FROM PRODUCT_REVIEW pr
        WHERE p.product_no = pr.product_no) AS review_count,
        #{url} || pi.product_image_filename as product_image,
        (select count(*) from FAVORITE where FAVORITE.PRODUCT_NO = p.product_no and FAVORITE.MEMBER_NO = #{memberNo} and ROWNUM =1) as favorite_enabled
        from PRODUCT p
        join PRODUCT_IMAGE pi on p.product_no=pi.product_no and pi.PRODUCT_IMAGE_NO=1
        <if test="categoryNo!=null"> where p.product_category_no=#{categoryNo}</if>
        order by p.product_no desc
        ) p
        where rownum&lt;=#{endRowNum}
        )
        where rnum&gt;=#{startRowNum}
    </select>

    <!-- 상품 상세 보기 -->
    <resultMap id="readMap" type="kr.kro.namohagae.mall.dto.ProductDto$Read">
        <id column="product_no" property="productNo" />
        <result column="product_name" property="productName" />
        <result column="product_content" property="productContent" />
        <result column="product_price" property="productPrice" />
        <result column="product_grade" property="productGrade" />
        <result column="review_count" property="reviewCount" />
        <result column="product_stock" property="productStock" />
        <collection property="productImages" javaType="list" ofType="String">
            <result column="product_image" />
        </collection>
    </resultMap>

    <select id="findByProductNo" resultMap="readMap">
        SELECT p.product_no, p.product_name, p.product_content, p.product_price,
               (SELECT ROUND(SUM(pr.PRODUCT_REVIEW_STAR) / COUNT(pr.product_order_detail_no), 1)
                FROM PRODUCT_REVIEW pr
                WHERE p.product_no = pr.product_no) AS PRODUCT_GRADE,
               (SELECT COUNT(pr.product_order_detail_no)
                FROM PRODUCT_REVIEW pr
                WHERE p.product_no = pr.product_no) AS review_count,
               p.product_stock,
               #{url} || pi.product_image_filename as product_image
        FROM PRODUCT p
                 JOIN PRODUCT_IMAGE pi ON p.product_no = pi.product_no and pi.product_image_no=1
        WHERE p.product_no = #{productNo}
    </select>

    <!-- 상품 번호 찾아서 재고 업데이트 -->
    <update id="updateStockByProductNo" parameterType="java.util.Map">
        UPDATE PRODUCT p
        SET product_stock = product_stock - (
            SELECT pod.product_order_detail_count
            FROM PRODUCT_ORDER_DETAIL pod
            WHERE pod.product_no = p.product_no and pod.product_order_detail_no=#{productOrderDetailNo}
        )
        WHERE p.product_no = #{productNo}
    </update>

    <!-- 상품 번호로 상품 정보 불러오기 -->
    <select id="findInformationByProductNo" resultType="int">
        select * from PRODUCT where product_no = #{productNo}
    </select>

    <!-- 상품 정보 읽어 오기 -->
    <select id="findProductByNo" resultType="Product">
        select * from product where product_no=#{productNo}
    </select>

    <!-- 상품명으로 검색 -->
    <select id="findByProductName" resultMap="readAllMap">
        select * from
        (
        select rownum as rnum, p.* from
        (
        select p.product_no, p.product_name, p.product_price, p.product_stock,
        (SELECT ROUND(SUM(pr.PRODUCT_REVIEW_STAR) / COUNT(pr.product_order_detail_no), 1)
        FROM PRODUCT_REVIEW pr
        WHERE p.product_no = pr.product_no) AS PRODUCT_GRADE,
        (SELECT COUNT(pr.product_order_detail_no)
        FROM PRODUCT_REVIEW pr
        WHERE p.product_no = pr.product_no) AS review_count,
        #{url} || pi.product_image_filename as product_image,
        (select count(*) from FAVORITE where FAVORITE.PRODUCT_NO = p.product_no and FAVORITE.MEMBER_NO = #{memberNo} and ROWNUM =1) as favorite_enabled
        from PRODUCT p
        join PRODUCT_IMAGE pi on p.product_no=pi.product_no and pi.PRODUCT_IMAGE_NO=1
        <if test="categoryNo!=null"> where p.product_category_no=#{categoryNo}</if>
        and product_name like '%' || #{productName} || '%'
        order by p.product_name asc
        ) p
        where rownum&lt;=#{endRowNum}
        )
        where rnum&gt;=#{startRowNum}
    </select>


    <!-- 필터(최신순) 검색 -->
    <select id="findAllByNewProduct" resultMap="readAllMap">
        select * from
        (
        select rownum as rnum, p.* from
        (
        select p.product_no, p.product_name, p.product_price, p.product_stock,
        (SELECT ROUND(SUM(pr.PRODUCT_REVIEW_STAR) / COUNT(pr.product_order_detail_no), 1)
        FROM PRODUCT_REVIEW pr
        WHERE p.product_no = pr.product_no) AS PRODUCT_GRADE,
        (SELECT COUNT(pr.product_order_detail_no)
        FROM PRODUCT_REVIEW pr
        WHERE p.product_no = pr.product_no) AS review_count,
        #{url} || pi.product_image_filename as product_image,
        (select count(*) from FAVORITE where FAVORITE.PRODUCT_NO = p.product_no and FAVORITE.MEMBER_NO = #{memberNo} and ROWNUM =1) as favorite_enabled
        from PRODUCT p
        join PRODUCT_IMAGE pi on p.product_no=pi.product_no and pi.PRODUCT_IMAGE_NO=1
        <if test="categoryNo!=null"> where p.product_category_no=#{categoryNo}</if>
        order by p.product_no desc
        ) p
        where rownum&lt;=#{endRowNum}
        )
        where rnum&gt;=#{startRowNum}
    </select>

    <!-- 필터(인기순) 검색 -->
    <select id="findAllByBestProduct" resultMap="readAllMap">
        select * from
        (
        select rownum as rnum, p.* from
        (
        select p.product_no, p.product_name, p.product_price, p.product_stock,
        (SELECT ROUND(SUM(pr.PRODUCT_REVIEW_STAR) / COUNT(pr.product_order_detail_no), 1)
        FROM PRODUCT_REVIEW pr
        WHERE p.product_no = pr.product_no) AS PRODUCT_GRADE,
        (SELECT COUNT(pr.product_order_detail_no)
        FROM PRODUCT_REVIEW pr
        WHERE p.product_no = pr.product_no) AS review_count,
        #{url} || pi.product_image_filename as product_image,
        (select count(*) from FAVORITE where FAVORITE.PRODUCT_NO = p.product_no and FAVORITE.MEMBER_NO = #{memberNo} and ROWNUM =1) as favorite_enabled
        from PRODUCT p
        join PRODUCT_IMAGE pi on p.product_no=pi.product_no and pi.PRODUCT_IMAGE_NO=1
        <if test="categoryNo!=null"> where p.product_category_no=#{categoryNo}</if>
        order by case when product_grade is null then 1 else 0 end, product_grade desc, review_count desc nulls last
        ) p
        where rownum&lt;=#{endRowNum}
        )
        where rnum&gt;=#{startRowNum}
    </select>

    <!-- 필터(이름순) 검색 -->
    <select id="findAllByProductName" resultMap="readAllMap">
        select * from
        (
        select rownum as rnum, p.* from
        (
        select p.product_no, p.product_name, p.product_price, p.product_stock,
        (SELECT ROUND(SUM(pr.PRODUCT_REVIEW_STAR) / COUNT(pr.product_order_detail_no), 1)
        FROM PRODUCT_REVIEW pr
        WHERE p.product_no = pr.product_no) AS PRODUCT_GRADE,
        (SELECT COUNT(pr.product_order_detail_no)
        FROM PRODUCT_REVIEW pr
        WHERE p.product_no = pr.product_no) AS review_count,
        #{url} || pi.product_image_filename as product_image,
        (select count(*) from FAVORITE where FAVORITE.PRODUCT_NO = p.product_no and FAVORITE.MEMBER_NO = #{memberNo} and ROWNUM =1) as favorite_enabled
        from PRODUCT p
        join PRODUCT_IMAGE pi on p.product_no=pi.product_no and pi.PRODUCT_IMAGE_NO=1
        <if test="categoryNo!=null"> where p.product_category_no=#{categoryNo}</if>
        order by trim(product_name) asc
        ) p
        where rownum&lt;=#{endRowNum}
        )
        where rnum&gt;=#{startRowNum}
    </select>

    <delete id="delete">
        delete from PRODUCT where PRODUCT_NO= #{productNo} and ROWNUM=1
    </delete>

    <!-- 리뷰 등록 시 상품 별점 업데이트 -->
    <update id="updateProductGradebyReviewStar">
        UPDATE product p
        SET product_grade = (
            SELECT ROUND(SUM(pr.product_review_star) / COUNT(pr.product_order_detail_no), 1)
            FROM product_review pr
            WHERE p.product_no = pr.product_no
        )
        WHERE p.product_no = #{productNo}
    </update>

    <select id="findAllByNewProductForMain" resultMap="readAllMap">
        SELECT
            p.product_no, p.product_name, p.product_price, p.product_stock,
            (SELECT ROUND(SUM(pr.product_review_star) / COUNT(pr.product_order_detail_no), 1)
             FROM product_review pr
             WHERE p.product_no = pr.product_no) AS product_grade,
            (SELECT COUNT(pr.product_order_detail_no)
             FROM product_review pr
             WHERE p.product_no = pr.product_no) AS review_count,
             #{url} || pi.product_image_filename AS product_image,
            (SELECT COUNT(*)
             FROM favorite
             WHERE favorite.product_no = p.product_no
               AND favorite.member_no = #{memberNo}
               AND ROWNUM = 1) AS favorite_enabled
        FROM product p
                 JOIN product_image pi ON p.product_no = pi.product_no
            AND pi.product_image_no = 1
        ORDER BY p.product_no DESC
    </select>

    <select id="findAllByBestProductForMain" resultMap="readAllMap">
        SELECT
            p.product_no, p.product_name, p.product_price, p.product_stock,
            (SELECT ROUND(SUM(pr.product_review_star) / COUNT(pr.product_order_detail_no), 1)
             FROM product_review pr
             WHERE p.product_no = pr.product_no) AS product_grade,
            (SELECT COUNT(pr.product_order_detail_no)
             FROM product_review pr
             WHERE p.product_no = pr.product_no) AS review_count,
             #{url} || pi.product_image_filename AS product_image,
            (SELECT COUNT(*)
             FROM favorite
             WHERE favorite.product_no = p.product_no
               AND favorite.member_no = #{memberNo}
               AND ROWNUM = 1) AS favorite_enabled
        FROM product p
                 JOIN product_image pi ON p.product_no = pi.product_no
            AND pi.product_image_no = 1
        ORDER BY CASE WHEN product_grade IS NULL THEN 1 ELSE 0 END, product_grade DESC, review_count DESC NULLS LAST
    </select>
    <!--메인 md 추천 리스트-->
    <select id="findByRecommendEnabled" resultType="kr.kro.namohagae.mall.dto.ProductDto$MdRecommend">
        select PRODUCT.PRODUCT_NO, PRODUCT_NAME, #{url}||PRODUCT_IMAGE_FILENAME as productImage
        from PRODUCT join PRODUCT_IMAGE PI on PRODUCT.PRODUCT_NO = PI.PRODUCT_NO
        where  PRODUCT_RECOMMEND_ENABLED=1 and PRODUCT_IMAGE_NO=1
    </select>
</mapper>